# 서로 다른 n개 중에서 r개 순서없이 고르기
# pick r items without of order from each different n items
# 서로 다른 n개 중에서 r개를 순서 없이 고르는 방법의 가짓수를 출력하시오.
# 1, 2, 3 서로 다른 3개 중에 2개를 고를 수 있는 방법의 가짓수는 (1, 2),
# (2, 3), (1, 3)의 3가지이다.
# p개 중에서 q개를 순서 없이 고르는 방법의 가짓수는 (p-1)개 중에서 (q-1)개를
# 선택하고 마지막 p번째 것을 선택하는 경우의 가짓수 + (p-1)개 중에서 q개를
# 선택하고 마지막 p번째 것을 선택하지 않는 경우의 가짓수이다. 
# f(p, q)를 p개 중에서 q개를 순서 없이 선택하는 방법의 가짓수라고 정의하면,
# 위의 의미를 다음과 같은 점화 관계식으로 표현할 수 있다.
# f(p, q) = f(p-1, q-1) + f(p-1, q)
# 재귀 호출을 중단시키기 위해 가장 작은 경우나 특별한 몇 가지 경우 생각해보면
# - p개 중에서 1개를 순서 없이 선택하는 방법의 가짓수는 p,
# - p개 중에서 p개를 순서 없이 선택하는 방법의 가짓수는 1,
# - 10개 중에서 20개를 순서 없이 선택하는 방법의 가짓수는 0,
# 와 같이 경우들을 생각해 낼 수 있다.
# 서로 다른 n개 중에서 순서 없이 r개를 고를 수 있는 방법의 가짓수를 출력.
# method 1
a, b = map(int, input().split())
d = {}
def combi(a, b):
    if b == 1:
        d[(a, b)] = a
        return d[(a, b)]
    elif b == a:
        d[(a, b)] = 1
        return d[(a, b)]
    elif a < b:
        d[(a, b)] = 0
        return d[(a, b)]
    else:
        d[(a, b)] = combi(a-1, b-1) + combi(a-1, b)
        return d[(a, b)]
print(combi(a, b))